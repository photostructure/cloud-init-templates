#cloud-config-archive

- type: text/cloud-config
  content: |
    write_files:
      - path: /etc/environment.d/90-infrastructure.conf
        content: |
          # Email Configuration
          DEVOPS_EMAIL="devops@yourcompany.com"
          ALERTS_EMAIL="alerts@yourcompany.com"
          AWS_REGION="us-west-2"

          # Search Configuration
          SEARCH_DOMAIN="search.yourcompany.com"
          WEB_DOMAIN="yourcompany.com"
        permissions: '0644'
        owner: root:root

      # Meilisearch environment configuration
      - path: /etc/meilisearch.env
        content: |
          MEILI_ENV=production
          MEILI_MASTER_KEY=ChangeThisToASecureKey32Chars!!
          MEILI_HTTP_ADDR=0.0.0.0:7700
          MEILI_DB_PATH=/var/lib/meilisearch/data
          MEILI_LOG_LEVEL=INFO
        permissions: '0600'
        owner: root:root

- type: text/x-include-url
  content: |
    https://raw.githubusercontent.com/your-org/cloud-init-templates/main/base/hardening.yaml
    https://raw.githubusercontent.com/your-org/cloud-init-templates/main/base/docker.yaml
    https://raw.githubusercontent.com/your-org/cloud-init-templates/main/base/nodejs.yaml
    https://raw.githubusercontent.com/your-org/cloud-init-templates/main/base/caddy.yaml
    https://raw.githubusercontent.com/your-org/cloud-init-templates/main/base/email-alerts.yaml

- type: text/cloud-config
  content: |
    merge_how:
      - name: list
        settings: [append]
      - name: dict
        settings: [no_replace, recurse_list]

    write_files:
      # Docker Compose for Meilisearch
      - path: /opt/search/docker-compose.yml
        content: |
          version: '3.8'
          services:
            meilisearch:
              image: getmeili/meilisearch:v1.16
              container_name: meilisearch
              restart: always
              env_file: /etc/meilisearch.env
              volumes:
                - meilisearch_data:/var/lib/meilisearch
              ports:
                - "127.0.0.1:7700:7700"
              healthcheck:
                test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
                interval: 30s
                timeout: 10s
                retries: 3
          volumes:
            meilisearch_data:
        permissions: '0644'
        owner: root:root

      # Search API service (Node.js)
      - path: /opt/search/search-api.js
        content: |
          const express = require('express');
          const { MeiliSearch } = require('meilisearch');

          const app = express();
          const PORT = 3001;

          // Load environment
          require('dotenv').config();
          const client = new MeiliSearch({
            host: 'http://localhost:7700',
            apiKey: process.env.MEILI_SEARCH_KEY
          });

          app.use(express.json());

          app.get('/api/search', async (req, res) => {
            try {
              const { q, limit = 20 } = req.query;
              if (!q) return res.status(400).json({ error: 'Query required' });

              const results = await client.index('main').search(q, { limit });
              res.json(results);
            } catch (error) {
              res.status(500).json({ error: 'Search failed' });
            }
          });

          app.listen(PORT, '127.0.0.1', () => {
            console.log(`Search API running on port ${PORT}`);
          });
        permissions: '0644'
        owner: root:root

      # Reverse proxy configuration (Caddy)
      - path: /opt/search/Caddyfile
        content: |
          # Load environment variables
          import /etc/environment.d/90-infrastructure.conf

          {$SEARCH_DOMAIN} {
            header {
              Strict-Transport-Security "max-age=31536000"
              X-Content-Type-Options "nosniff"
              X-Frame-Options "DENY"
            }

            handle /api/* {
              reverse_proxy localhost:3001
            }

            handle /admin/* {
              reverse_proxy localhost:7700
            }

            respond 404
          }
            permissions: '0644'
            owner: root:root

        packages:
          - curl
          - jq

        runcmd:
          # Create directories
          - mkdir -p /opt/search /var/lib/meilisearch

          # Generate secure master key
          - |
            if grep -q "ChangeThisToASecureKey32Chars!!" /etc/meilisearch.env; then
              MASTER_KEY=$(openssl rand -base64 32)
              sed -i "s/ChangeThisToASecureKey32Chars!!/${MASTER_KEY}/" /etc/meilisearch.env
            fi

          # Install Node.js dependencies
          - cd /opt/search && npm init -y
          - cd /opt/search && npm install express meilisearch dotenv

          # Start services
          - cd /opt/search && docker-compose up -d

        final_message: |
          üîç Secure Meilisearch server is ready!

          Services:
          ‚Ä¢ Meilisearch: localhost:7700 (admin)
          ‚Ä¢ Search API: localhost:3001 (public)
          ‚Ä¢ Caddy: ports 80/443 (proxy)
          ‚Ä¢ Security hardening applied
          ‚Ä¢ Email alerts configured

          Next steps:
          1. Configure DNS for your search domain
          2. Index your content via admin endpoints
          3. Use public search API in your applications
